import BButton from "@/components/Base/BButton";
import BModal from "@/components/Base/BModal";
import BText from "@/components/Base/BText";
import BView from "@/components/Base/BView";
import { useUserListContextImmer } from "@/contexts/UserListProvider";
import { ILoginAccount } from "@/types/ILoginAccount";
import React from "react";
import { ScrollView, TextInput } from "react-native";
import { useImmer } from "use-immer";

export interface EditUserModalProps {
  visible?: boolean;
  onClose?: () => void;
  user?: ILoginAccount;
}

function EditUserModal(props: EditUserModalProps) {
  const {
    //
    user: userInit,
    visible,
    onClose,
  } = props;

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const [list, setList] = useUserListContextImmer();

  const [user, setUser] = useImmer<ILoginAccount>(
    userInit || {
      useId: String(new Date().getTime()),
      username: "",
      password: "",
    },
  );

  return (
    <BModal visible={visible}>
      <ScrollView>
        <BView className="pt-5" />

        <BView className="container">
          <BButton onPress={() => onClose?.()}>Visible</BButton>
        </BView>

        <BView className="container">
          <TextInput
            value={user.useId}
            className="bg-red-300"
            placeholder="ID"
            onChangeText={(text) => {
              setUser((u) => {
                u.useId = text;
              });
            }}
          />
        </BView>

        <BView className="container">
          <TextInput
            value={user.username}
            className="bg-red-300"
            placeholder="Tên đăng nhập"
            onChangeText={(text) => {
              setUser((u) => {
                u.username = text;
              });
            }}
          />
        </BView>

        <BView className="container">
          <TextInput
            value={user.password}
            className="bg-red-300"
            placeholder="Mật khẩu"
            onChangeText={(text) => {
              setUser((u) => {
                u.password = text;
              });
            }}
          />
        </BView>

        <BView className="container">
          <BButton onPress={() => onClose?.()}>Lưu</BButton>
        </BView>

        {2 === 1 && (
          <BText>
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123
            123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123123 123 123 123 123 123
            123 123 123 123 123 123 end
          </BText>
        )}
      </ScrollView>
      <BView className="pb-5" />
    </BModal>
  );
}

export default EditUserModal;
